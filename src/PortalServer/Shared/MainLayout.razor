@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<MudLayout>
    <MudAppBar Elevation="1" Style="@($"Background:{Colors.Blue.Darken4};")">
        <img src="~/logoEPF.png" />
        <MudText Typo="Typo.h5" Class="ml-0">Portale EPF</MudText>
        <AuthorizeView>
            <Authorized>
                <MudText Style="position:relative; justify-content:end" >Welcome @context.User.Identity.Name ! </MudText>
                <MudButton Class="btn-link btn" OnClick="Logout" Style="color:white; font-size:15px; font-family:Marlett; position:absolute; right:10px">Logout</MudButton>
            </Authorized>
        </AuthorizeView>
    </MudAppBar>
    <MudMainContent Style="height:100vh; width:100%;">
        @Body

    </MudMainContent>
</MudLayout>


<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@code{
            [CascadingParameter]
            private Task<AuthenticationState> authState { get; set; }

        private System.Security.Claims.ClaimsPrincipal principal;

        protected async override void OnParametersSet()
        {
            if (authState != null)
            {
                principal = (await authState).User;
            }
        }

       
    private void NavigationNotAuth()
    {
        NavigationManager.NavigateTo("/");
    }
    private void NavigationAuth()
    {
        NavigationManager.NavigateTo("/clients/");
    }

    public async Task Logout()
    {

        // var callbackUrl = Url.Action(nameof(SignedOut), "Account", values: null, protocol: Request.Scheme);
        /*
          return SignOut(
              new AuthenticationProperties { RedirectUri = callbackUrl },
              CookieAuthenticationDefaults.AuthenticationScheme,
              OpenIdConnectDefaults.AuthenticationScheme);

        */
        await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).LogoutUserFromAuthentication();
        NavigationManager.NavigateTo("https://localhost:44309/");
        StateHasChanged();
    }
}

