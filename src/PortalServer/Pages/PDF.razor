@page "/view/PDF/{FK_Father}"
@using System.Net.Http.Json
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Mvc
@inject CustomIDataProtection CustomProtection


<MudTable Items="pdf_files" Hover="true" Bordered="true" Filter="new Func<PDF_FileModel, bool>(FilterFunc)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">PDF Files</MudText>
        <MudSpacer />
        <MudTextField T="string" @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh> <MudIcon Style="font-size: 30px" Icon="@Icons.Filled.Folder" /> File name</MudTh>

    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Folder_name" @onclick="()=>clicked(context.FF_Name, context.Location_path)">@context.FF_Name</MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText>No matching records found</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
</MudTable>

@code
{
    [Parameter]
    public string FK_Father { get; set; }

    public List<PDF_FileModel> pdf_files = null;
    public List<PDFModel> pdf_folders = null;
    public string searchString = "";


    protected async override Task OnInitializedAsync()
    {
        //Console.WriteLine("https://localhost:44315/api/Folders/");
        pdf_folders = await httpClient.GetFromJsonAsync<List<PDFModel>>("https://localhost:44315/api/Views/pdf?father_name=" + CustomProtection.Encode(FK_Father));
        foreach(var pdf in pdf_folders)
        {

            pdf_files = await httpClient.GetFromJsonAsync<List<PDF_FileModel>>("https://localhost:44315/api/Views/pdf_file/" + pdf.Id.ToString() );

        }
    }

    private bool FilterFunc(PDF_FileModel element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.FF_Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Location_path} {element.FK_Father} ".Contains(searchString))
            return true;
        return false;
    }

    private async Task clicked(string file_name, string path)
    {
        path = Uri.EscapeDataString(path);

        /*
            HttpRequestMessage httpRequestMessageOrder = new();
            httpRequestMessageOrder.Method = new HttpMethod("GET");
            httpRequestMessageOrder.RequestUri = new Uri(@"https://localhost:44315/api/Views/streamPDF/" + path);
        

            await httpClient.SendAsync(httpRequestMessageOrder);
            */

        //path = path.Replace(@"\", "%5C").Replace(":", "%3A");
        path = CustomProtection.Decode(path);


        NavigationManager.NavigateTo(@"https://localhost:44315/api/Views/streamPDF?File_path=" + CustomProtection.Encode(path));


    }


    //https://localhost:44315/api/Views/streamPDF/S%3A%5CSPAC%5CCommesse%5CDromont%5C19046%20Linea%20In-can%20H2O%20Argentina%20Weber%20%2818026%29%5C18026E01%5Cpdf%5C18026E01.pdf
}
