@page "/clients"
@inject HttpClient Http
@using System.Net.Http.Json
@inject HttpClient httpClient
@inject NavigationManager NavigationManager  

<h3>Clients</h3>

@LoginMessage

<MudSimpleTable Hover="true" Bordered="true" Dense="false" FixedHeader="@true" Style="@(fixedheader?"height:600px;":"")">
    <thead>
        <tr>
            <th> <MudIcon Style="font-size: 25px" Icon="@Icons.Filled.Folder"/>  Folder</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in clients)
        {
            <tr>
                <td @onclick="()=>clicked(order.Folder_name)"  >@order.Folder_name</td>

            </tr>
        }
    </tbody>
</MudSimpleTable>


<MudTable Items="clients" Hover="true" Bordered="true">
    <HeaderContent>
        <MudTh> <MudIcon Style="font-size: 30px" Icon="@Icons.Filled.Folder" /> Folder Name</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTr>
            @foreach (var key in clients)
            {
                <MudTd @onclick="()=>clicked(key.Folder_name)">@key.Folder_name</MudTd>
            }
        </MudTr>
    </RowTemplate>
</MudTable>

@code {
    [Parameter]
    public string currentpage { get; set; }

    [Parameter]
    public string fatherpage { get; set; }




    public List<ClientModel> clients = new();
    public string json_client = null;
    public string LoginMessage { get; set; }
    bool fixedheader = true;


    protected async override Task OnInitializedAsync()
    {
        Console.WriteLine("https://localhost:44315/api/Folders/");
        clients = await httpClient.GetFromJsonAsync<List<ClientModel>>("https://localhost:44315/api/Folders/");

        #region " Heavy Code"
        /*
        #region "API Request and Response"
        // Preparing the httpRequestMessage to handle my request
        HttpRequestMessage httpRequestMessage = new();
        httpRequestMessage.Method = new HttpMethod("GET");
        httpRequestMessage.RequestUri = new Uri(@"https://localhost:44315/api/Folders/");


        var response = await Http.SendAsync(httpRequestMessage);

        var responseStatusCode = response.StatusCode;
        var responseBody = await response.Content.ReadAsStringAsync();

        #endregion

        if (responseStatusCode.ToString() == "OK") // If the user credentials are legit it will be true
        {
            LoginMessage = "Yes List";
            clients = JsonConvert.DeserializeObject<List<ClientModel>>(responseBody);
        }
        else
        {
            LoginMessage = "No List";
        }

        */
        #endregion

    }

    private void clicked(string folder_name)
    {
        NavigationManager.NavigateTo("view/Orders/"+ folder_name);
    }



}
